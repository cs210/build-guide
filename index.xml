<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CS 210 Build Guide</title>
    <link>https://cs210.github.io/</link>
    <description>Recent content on CS 210 Build Guide</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 06 Feb 2025 10:55:07 -0800</lastBuildDate>
    <atom:link href="https://cs210.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Talking to Users</title>
      <link>https://cs210.github.io/docs/cb/talking-to-users/</link>
      <pubDate>Thu, 06 Feb 2025 10:55:07 -0800</pubDate>
      <guid>https://cs210.github.io/docs/cb/talking-to-users/</guid>
      <description>&lt;h1 id=&#34;on-talking-to-users&#34;&gt;On Talking to Users&lt;/h1&gt;&#xA;&lt;p&gt;During our VC meetings this past week, &lt;a href=&#34;https://www.linkedin.com/in/johnlilly/&#34;&gt;John Lilly&lt;/a&gt; brought up a generalized observation: a lot of folks seem to be guessing about what customers might want. This points to something broader: the important balance in 210 between rapidly prototyping and building something end users want.&lt;/p&gt;&#xA;&lt;p&gt;As CS people, we all love going heads down and building as opposed to talking to people. Especially with the rise of AI tools, it&amp;rsquo;s easy to get lost in prototyping forever without talking to a soul. After all, it should be all about opinion-based design, right?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Basic Website Setup</title>
      <link>https://cs210.github.io/docs/web/basic-website-setup/</link>
      <pubDate>Sat, 25 Jan 2025 10:55:07 -0800</pubDate>
      <guid>https://cs210.github.io/docs/web/basic-website-setup/</guid>
      <description>&lt;h1 id=&#34;basic-website-setup&#34;&gt;Basic Website Setup&lt;/h1&gt;&#xA;&lt;p&gt;Below is a quick setup guide for building a website with Next.js and Vercel â€” the perfect infrastructure to add V0 code to!&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;project-setup&#34;&gt;Project Setup&lt;/h2&gt;&#xA;&lt;p&gt;First, check if you have Node installed. If not, download &lt;a href=&#34;https://nodejs.org/en&#34;&gt;Node&lt;/a&gt;:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;node -v&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, create a new web project. The following command includes presets that integrate well with V0 code:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npx create-next-app@latest project-name --typescript --eslint --tailwind --app --src-dir --import-alias &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;@/*&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Say no to Turbopack.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mobile Basics</title>
      <link>https://cs210.github.io/docs/mobile/mobile-basics/</link>
      <pubDate>Sat, 25 Jan 2025 10:55:07 -0800</pubDate>
      <guid>https://cs210.github.io/docs/mobile/mobile-basics/</guid>
      <description>&lt;h1 id=&#34;mobile-basics&#34;&gt;Mobile Basics&lt;/h1&gt;&#xA;&lt;h2 id=&#34;language-choice&#34;&gt;Language choice&lt;/h2&gt;&#xA;&lt;p&gt;For building a mobile app we would suggest using React Native. It renders native mobile componenets and almost all code can be shared between IOS and Android.&lt;/p&gt;&#xA;&lt;p&gt;If you want higher performance on a specific type of device it might be worth considering the use of a Swift(IOS) or Kotlin(Android).&lt;/p&gt;&#xA;&lt;h2 id=&#34;developing-and-running-apps&#34;&gt;Developing and Running Apps&lt;/h2&gt;&#xA;&lt;p&gt;We suggest that you use &lt;a href=&#34;https://expo.dev/&#34;&gt;expo&lt;/a&gt; to test your app throughout your development process. It&amp;rsquo;s accessible and has everything your team will need most of the time. You can also write for both iOS and Android regardless of your development machine.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Basic ML</title>
      <link>https://cs210.github.io/docs/ml/basic-ml/</link>
      <pubDate>Wed, 08 Jan 2025 10:55:07 -0800</pubDate>
      <guid>https://cs210.github.io/docs/ml/basic-ml/</guid>
      <description>&lt;h1 id=&#34;basic-ml&#34;&gt;Basic ML&lt;/h1&gt;&#xA;&lt;p&gt;Below are some snippets for common ML use cases such as NLP &amp;ndash; namely, LLMs &amp;ndash; computer vision, and even standard statistical ML.&lt;/p&gt;&#xA;&lt;h2 id=&#34;large-language-models-llms&#34;&gt;Large Language Models (LLMs)&lt;/h2&gt;&#xA;&lt;p&gt;For initial iteration, using LLM APIs is probably the best way to go. There are several models out there, each with their own strengths. Below is an example using the &lt;a href=&#34;https://platform.openai.com/docs/quickstart?language-preference=python&#34;&gt;OpenAI API&lt;/a&gt; to make a call to a language model:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python3&#34; data-lang=&#34;python3&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;from&lt;/span&gt; openai &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; OpenAI&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; OpenAI()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;completion &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; client&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;chat&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;completions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;create(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    model&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gpt-4o-mini&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    messages&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;role&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;system&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;You are a helpful assistant.&amp;#34;&lt;/span&gt;},&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;role&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;user&amp;#34;&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;content&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Write a haiku about recursion in programming.&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(completion&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;choices[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;message)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;As you continue to iterate, you may want to leverage the power of open-source models. For this, Hugging Face &amp;ndash; in particular, the &lt;a href=&#34;https://huggingface.co/sentence-transformers&#34;&gt;SentenceTransformers&lt;/a&gt; module &amp;ndash; will be your best friend. Just specify your language model and you&amp;rsquo;ll be good to go:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Class Resources</title>
      <link>https://cs210.github.io/docs/class-resources/</link>
      <pubDate>Wed, 08 Jan 2025 10:55:07 -0800</pubDate>
      <guid>https://cs210.github.io/docs/class-resources/</guid>
      <description>&lt;h1 id=&#34;class-resources&#34;&gt;Class Resources&lt;/h1&gt;&#xA;&lt;p&gt;Below are some general class resources, ranging from deployment credits to general tools of the trade.&lt;/p&gt;&#xA;&lt;h2 id=&#34;vercel-credits&#34;&gt;Vercel Credits&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Students can create a Vercel Hobby account as soon as the class starts - Hobby accounts are always free&lt;/li&gt;&#xA;&lt;li&gt;If they&amp;rsquo;d like to explore Pro features, we&amp;rsquo;ve set up &amp;ldquo;Stanford CS&amp;rdquo; as a category in the &lt;a href=&#34;https://vercel.com/startups/credits&#34;&gt;Vercel Credits for Startups&lt;/a&gt; application page. Each team will receive $1,200 in credits. For &amp;ldquo;Proof of Partnership&amp;rdquo;, they should upload a screenshot of the syllabus / an e-mail from Jay about the course.&lt;/li&gt;&#xA;&lt;li&gt;A 14-day Pro Trial begins (they can email &lt;a href=&#34;mailto:josh.oynick@vercel.com&#34;&gt;josh.oynick@vercel.com&lt;/a&gt; with any issues).&lt;/li&gt;&#xA;&lt;li&gt;At the end of the trial, if the teams choose to remain on Pro and add credit card info, the credits will begin to draw down.&lt;/li&gt;&#xA;&lt;li&gt;If teams add payment info, they are strongly encouraged to set hard spending limits right away &lt;a href=&#34;https://vercel.com/docs/pricing/spend-management&#34;&gt;(documentation)&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;tools-of-the-trade&#34;&gt;Tools of the Trade&lt;/h2&gt;&#xA;&lt;h3 id=&#34;documentation&#34;&gt;Documentation&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Github Wiki&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cs210/Home/blob/master/Resources/exampleTeamHome.md&#34;&gt;Here are some examples&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;project-management&#34;&gt;Project Management&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Github issues, milestones, labels, comments&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cs210/SlingShot/issues?q=is%3Aissue+is%3Aclosed&#34;&gt;Here is an example&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;real-time-team-communication&#34;&gt;Real-time Team Communication&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Slack, Messenger&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;discovery-concepting-phase&#34;&gt;Discovery, Concepting Phase&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Hand draw, Miro, Figma, GSlides&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;build-phase&#34;&gt;Build Phase&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Github Code (Pull request methodology)&lt;/li&gt;&#xA;&lt;li&gt;Github issues (code focused)&lt;/li&gt;&#xA;&lt;li&gt;Leverage Copilot, chatGPT, Bard as is useful&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;github-resources&#34;&gt;GitHub Resources&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cs210/Home/blob/master/Resources/RegisterUserNameInGit.md&#34;&gt;Make sure your git activity is attributed to you&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cs210/Home/blob/master/Resources/GithubCheatSheetPage1.pdf&#34;&gt;Github Cheat Sheet - Page 1&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cs210/Home/blob/master/Resources/GithubCheatSheetPage2.pdf&#34;&gt;Github Cheat Sheet - Page 2&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://help.github.com/articles/creating-a-pull-request/&#34;&gt;How to make a Github pull request&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;miscellany-resources&#34;&gt;Miscellany Resources&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.google.com/spreadsheets/d/1M6M7dHHVzunv3ynmKHIMDKkJat3JVMIUYl3Bs-g9VUw/edit?usp=sharing&#34;&gt;Messaging Activation Matrix&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1vu-8u8_Qayhp2ZJwyUKVFi920v-m0gLhYrK8908S5do/edit?usp=sharing&#34;&gt;Beginner&amp;rsquo;s resources for Building Web and mobile apps&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cs210/Home/blob/master/Resources/CS210ReadingList.pdf&#34;&gt;CS210 Recommended Reads for Aspiring Program Managers/Product Leaders&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/17V02paI0qu3Ib4Hi8N-UNfOv-r2VGFjF5tgbj4e3Lvc/edit?usp=sharing&#34;&gt;Contract of Deliverables Template&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1G83CHXpSJJ53WH4mEEiaD7O_BOWMzSAfDg4zL6o-3L4/edit?usp=sharing&#34;&gt;Product Requirements Document (PRD)&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/12levihvt-3oeqtq_nUZLFPP0ipz9w2Whiz5fVkJ57pM/edit?usp=sharing&#34;&gt;An incomplete list of ethics questions to consider&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cs210/Home/blob/master/BudgetGuidelines.md&#34;&gt;Team Budget Guidelines&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/cs210/Home/blob/master/Grading%20Rubric%20%20(2).pdf&#34;&gt;Grading Rubric&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://giphy.com/apps/giphycapture&#34;&gt;Make an animated gif from screen shots&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://scrumblr.ca/&#34;&gt;Digital sticky note option&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Getting Started in VR</title>
      <link>https://cs210.github.io/docs/vr/getting-started-in-vr/</link>
      <pubDate>Wed, 08 Jan 2025 10:55:07 -0800</pubDate>
      <guid>https://cs210.github.io/docs/vr/getting-started-in-vr/</guid>
      <description>&lt;h1 id=&#34;getting-started-in-vr&#34;&gt;Getting Started in VR&lt;/h1&gt;&#xA;&lt;p&gt;Original document by Mindy:&lt;/p&gt;&#xA;&lt;p&gt;Last year I did a VR project in CS210 with Unreal Engine, and thought that I would share some thoughts and tips with you guys to get you started.&lt;/p&gt;&#xA;&lt;h2 id=&#34;demos&#34;&gt;Demos&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Title&lt;/th&gt;&#xA;          &lt;th&gt;Link&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Oculus Demos repository&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://share.oculus.com/&#34;&gt;https://share.oculus.com/&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;The definitive VR experiences and demos repository from Oculus.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;strong&gt;Elite Dangerous&lt;/strong&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;https://www.elitedangerous.com/&#34;&gt;https://www.elitedangerous.com/&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;A space exploration video game with a great VR experience. Costs $45.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h2 id=&#34;things-to-think-about&#34;&gt;Things to think about&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;what sort of approaches to games/experiences might work for your project?&lt;/li&gt;&#xA;&lt;li&gt;What are some common/different control interfaces/menus/UI that the demos use? What works better or worse?&lt;/li&gt;&#xA;&lt;li&gt;what hasn&amp;rsquo;t been done/done well? What can you bring to the table?&lt;/li&gt;&#xA;&lt;li&gt;There are also loads of other VR demos available - if you want to see if a kind of demo exists just Google it and you&amp;rsquo;ll probably turn something up.&lt;/li&gt;&#xA;&lt;li&gt;Also check out Cardboard demos on Google Play (I recommend VRSE) to see what sort of things are happening in the non-gaming/low-end space.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;vr-best-practices&#34;&gt;VR best practices&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Google - &lt;a href=&#34;http://www.fastcodesign.com/3053288/3-tips-on-designing-for-vr-from-google&#34;&gt;http://www.fastcodesign.com/3053288/3-tips-on-designing-for-vr-from-google&lt;/a&gt;, &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.google.vr.cardboard.apps.designlab&#34;&gt;https://play.google.com/store/apps/details?id=com.google.vr.cardboard.apps.designlab&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Unreal - &lt;a href=&#34;https://docs.unrealengine.com/latest/INT/Platforms/VR/ContentSetup/index.html&#34;&gt;https://docs.unrealengine.com/latest/INT/Platforms/VR/ContentSetup/index.html&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Oculus - &lt;a href=&#34;https://developer.oculus.com/documentation/intro-vr/latest/concepts/bp_intro/&#34;&gt;https://developer.oculus.com/documentation/intro-vr/latest/concepts/bp_intro/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Search for &amp;ldquo;VR best practices for [insert company/device/controller]&amp;rdquo; and you&amp;rsquo;ll probably unearth a ton of stuff&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;unreal-engine-tutorials&#34;&gt;Unreal Engine tutorials&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Unreal has a really good YouTube series where a developer sits there and shows you how to make a demo. This was by far the most helpful way to get me oriented.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLZlv_N0_O1gak1_FoAJVrEGiLIploeF3F&#34;&gt;https://www.youtube.com/playlist?list=PLZlv_N0_O1gak1_FoAJVrEGiLIploeF3F&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;LayoutVR has good walkthrough guides&lt;/li&gt;&#xA;&lt;li&gt;You can go read &lt;a href=&#34;https://docs.unrealengine.com/latest/INT/index.html&#34;&gt;the official Unreal Engine guides&lt;/a&gt; too&lt;/li&gt;&#xA;&lt;li&gt;Unreal has a steep learning curve if you&amp;rsquo;ve never done game dev before, so make sure you allocate a lot of time to learning it!&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;controllers&#34;&gt;Controllers&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;This is still a huge pain point in VR, and likely the bottleneck to what you can accomplish.&lt;/li&gt;&#xA;&lt;li&gt;Oculus Touch is probably your best bet if you can get your hands on it&lt;/li&gt;&#xA;&lt;li&gt;Razer Hydra/Sixense STEM or the Kinect are other good&lt;/li&gt;&#xA;&lt;li&gt;But really, try to find all your possible options. If the controller is not exactly commercially available yet, don&amp;rsquo;t be afraid to ask for a prototype. You won&amp;rsquo;t believe how willing people are to work with you once you drop the Stanford/Unreal/Facebook/Oculus name.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;mindys-teams-work-from-last-year&#34;&gt;Mindy&amp;rsquo;s team&amp;rsquo;s work from last year&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://unrealvr.wordpress.com/&#34;&gt;https://unrealvr.wordpress.com/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;I&amp;rsquo;ve also done stuff on the Cardboard and some product research on the space in general. Feel free to ask me any questions!&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;There is a LOT of information to just absorb if you&amp;rsquo;re completely new to the space.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Frontend Essentials</title>
      <link>https://cs210.github.io/docs/web/frontend-essentials/</link>
      <pubDate>Sat, 25 Jan 2025 10:55:07 -0800</pubDate>
      <guid>https://cs210.github.io/docs/web/frontend-essentials/</guid>
      <description>&lt;h1 id=&#34;frontend-development-guide-for-nextjs&#34;&gt;Frontend Development Guide for Next.js&lt;/h1&gt;&#xA;&lt;h2 id=&#34;component-architecture&#34;&gt;Component Architecture&lt;/h2&gt;&#xA;&lt;h3 id=&#34;understanding-components&#34;&gt;Understanding Components&lt;/h3&gt;&#xA;&lt;p&gt;Components are the building blocks of your React application. They should be:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Small and focused on a single responsibility&lt;/li&gt;&#xA;&lt;li&gt;Reusable across different parts of your application&lt;/li&gt;&#xA;&lt;li&gt;Easy to test and maintain&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s an example of a well-structured component:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-typescript&#34; data-lang=&#34;typescript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// components/ui/Card.tsx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Define the shape of props(parameters) that this component accepts&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CardProps&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;title&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;                  &lt;span style=&#34;color:#75715e&#34;&gt;// Required: The card&amp;#39;s title&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;children&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;React.ReactNode&lt;/span&gt;      &lt;span style=&#34;color:#75715e&#34;&gt;// Required: The content inside the card&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;className?&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;string&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// Optional: Additional CSS classes&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Card component that renders a styled container with a title and content&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Card&lt;/span&gt;({ &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;title&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;children&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#a6e22e&#34;&gt;className&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color:#75715e&#34;&gt;// Default to empty string if no className provided&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CardProps&lt;/span&gt;) {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// Main container with base styles and optional custom classes&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;className&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;`&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      rounded-lg    /* Rounded corners */&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      shadow-md    /* Subtle shadow for depth */&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      p-4         /* Padding on all sides */&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;className&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; /* Custom classes passed as prop */&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    `&lt;/span&gt;}&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      {&lt;span style=&#34;color:#75715e&#34;&gt;/* Title section with consistent styling */&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;h2&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;className&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;text-xl font-bold mb-2&amp;#34;&lt;/span&gt;&amp;gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;title&lt;/span&gt;}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;h2&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      {&lt;span style=&#34;color:#75715e&#34;&gt;/* Content section that renders the children */&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;{&lt;span style=&#34;color:#a6e22e&#34;&gt;children&lt;/span&gt;}&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;div&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This Card component demonstrates several best practices:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using LLMs</title>
      <link>https://cs210.github.io/docs/ml/using-llms/</link>
      <pubDate>Wed, 08 Jan 2025 10:55:07 -0800</pubDate>
      <guid>https://cs210.github.io/docs/ml/using-llms/</guid>
      <description>&lt;h1 id=&#34;using-llms&#34;&gt;Using LLMs&lt;/h1&gt;&#xA;&lt;p&gt;Below are some ways to go beyond just LLMs and use your custom data. These include methods such as Retrieval Augmented Generation (RAG), finetuning, and even searching over tabular data.&lt;/p&gt;&#xA;&lt;h2 id=&#34;prompt-engineering&#34;&gt;Prompt Engineering&lt;/h2&gt;&#xA;&lt;p&gt;LLMs are trained on a ton of text, so we can often get a lot out of them just by clever prompting. Finding the best way to prompt a model is also known as &lt;a href=&#34;https://lilianweng.github.io/posts/2023-03-15-prompt-engineering/&#34;&gt;&lt;strong&gt;prompt engineering&lt;/strong&gt;&lt;/a&gt;, and there are several popular methods, including chain-of-thought (including the model&amp;rsquo;s reasoning step-by-step) as well as few-shot prompting (providing a few sample examples).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Databases</title>
      <link>https://cs210.github.io/docs/web/databases/</link>
      <pubDate>Sat, 25 Jan 2025 10:55:07 -0800</pubDate>
      <guid>https://cs210.github.io/docs/web/databases/</guid>
      <description>&lt;h1 id=&#34;databases&#34;&gt;Databases&lt;/h1&gt;&#xA;&lt;p&gt;Most modern web applications often require a database to store and manage data. This guide will lead you through setting up a database for a Next.js project, using hosted database services, and performing basic CRUD (Create, Read, Update, Delete) operations with Prisma, a popular ORM (Object Relational Mapper).&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;choosing-a-database&#34;&gt;Choosing a Database&lt;/h2&gt;&#xA;&lt;h3 id=&#34;sql-postgresql-via-supabase&#34;&gt;SQL (PostgreSQL via Supabase)&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Choose when you need: Data relationships, ACID compliance, complex queries&lt;/li&gt;&#xA;&lt;li&gt;Free tier available, excellent documentation&lt;/li&gt;&#xA;&lt;li&gt;Built-in row-level security and authentication&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;nosql-mongodb-atlas&#34;&gt;NoSQL (MongoDB Atlas)&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Choose when you need: Flexible schema, high write throughput, horizontal scaling&lt;/li&gt;&#xA;&lt;li&gt;Free tier available, great for prototypes&lt;/li&gt;&#xA;&lt;li&gt;Native JSON support&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;setup-guide-for-hosted-databases&#34;&gt;Setup Guide for Hosted Databases&lt;/h2&gt;&#xA;&lt;h3 id=&#34;postgresql-via-supabase&#34;&gt;PostgreSQL via Supabase&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Sign up &lt;a href=&#34;https://supabase.com&#34;&gt;here&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Create project&lt;/li&gt;&#xA;&lt;li&gt;Get connection string from: Settings -&amp;gt; Database&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;mongodb-atlas&#34;&gt;MongoDB Atlas&lt;/h3&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Sign up &lt;a href=&#34;https://mongodb.com/atlas&#34;&gt;here&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;Create cluster (M0 Free tier)&lt;/li&gt;&#xA;&lt;li&gt;Get connection string from: Connect -&amp;gt; Connect your application&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;adding-prisma-to-your-nextjs-project&#34;&gt;Adding Prisma to Your Next.js Project&lt;/h2&gt;&#xA;&lt;p&gt;Prisma makes working with databases in Next.js efficient and type-safe. Follow these steps:&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Potpourri of Resources</title>
      <link>https://cs210.github.io/docs/ml/potpourri-resources/</link>
      <pubDate>Wed, 08 Jan 2025 10:55:07 -0800</pubDate>
      <guid>https://cs210.github.io/docs/ml/potpourri-resources/</guid>
      <description>&lt;h1 id=&#34;a-potpourri-of-resources&#34;&gt;A Potpourri of Resources&lt;/h1&gt;&#xA;&lt;p&gt;Below is a set of resources, ranging from popular AI/ML tooling to general advice.&lt;/p&gt;&#xA;&lt;h2 id=&#34;llm-frameworks&#34;&gt;LLM Frameworks&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.langchain.com/&#34;&gt;Langchain&lt;/a&gt; is probably the most popular LLM framework. Using Langchain, you can spin up RAG pipelines, parse through PDFs and other unstructured data, and much more.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://sdk.vercel.ai/docs/introduction&#34;&gt;Vercel&amp;rsquo;s AI SDK&lt;/a&gt; is another SDK that can help developers build AI-powered applications. In particular, the library can help with integrating text generation, tool calling, and agentic workflows directly in your frontend code.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.llamaindex.ai/&#34;&gt;LlamaIndex&lt;/a&gt; is another popular LLM framework that helps to enable use cases ranged from question-answering, chatbots, and even agents.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;general-advice&#34;&gt;General Advice&lt;/h2&gt;&#xA;&lt;p&gt;Below are some general tips, aggregated from industry experts and 210 alums.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
