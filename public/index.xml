<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>CS 210 Build Guide</title><link>http://localhost:1313/</link><description>Recent content on CS 210 Build Guide</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Sat, 25 Jan 2025 10:55:07 -0800</lastBuildDate><atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml"/><item><title>Mobile Basics</title><link>http://localhost:1313/docs/mobile/mobilebasics/</link><pubDate>Sat, 25 Jan 2025 10:55:07 -0800</pubDate><guid>http://localhost:1313/docs/mobile/mobilebasics/</guid><description>&lt;h1 id="mobile-basics">
 Mobile Basics
 &lt;a class="anchor" href="#mobile-basics">#&lt;/a>
&lt;/h1>
&lt;h2 id="language-choice">
 Language choice
 &lt;a class="anchor" href="#language-choice">#&lt;/a>
&lt;/h2>
&lt;p>For building a mobile app we would suggest using React Native. It renders native mobile componenets and almost all code can be shared between IOS and Android.&lt;/p>
&lt;p>If you want higher performance on a specific type of device it might be worth considering the use of a Swift(IOS) or Kotlin(Android).&lt;/p>
&lt;h2 id="developing-and-running-apps">
 Developing and Running Apps
 &lt;a class="anchor" href="#developing-and-running-apps">#&lt;/a>
&lt;/h2>
&lt;p>We suggest that you use &lt;a href="https://expo.dev/">expo&lt;/a> to test your app throughout your development process. It&amp;rsquo;s accessible and has everything your team will need most of the time. You can also write for both iOS and Android regardless of your development machine.&lt;/p></description></item><item><title>Start Here</title><link>http://localhost:1313/docs/web/start-here/</link><pubDate>Sat, 25 Jan 2025 10:55:07 -0800</pubDate><guid>http://localhost:1313/docs/web/start-here/</guid><description>&lt;h1 id="basic-website-setup">
 Basic Website Setup
 &lt;a class="anchor" href="#basic-website-setup">#&lt;/a>
&lt;/h1>
&lt;p>Below is a quick setup guide for building a website with Next.js and Vercel â€” the perfect infrastructure to add V0 code to!&lt;/p>
&lt;hr>
&lt;h2 id="project-setup">
 Project Setup
 &lt;a class="anchor" href="#project-setup">#&lt;/a>
&lt;/h2>
&lt;p>First, check if you have Node installed. If not, download &lt;a href="https://nodejs.org/en">Node&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>node -v
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Next, create a new web project. The following command includes presets that integrate well with V0 code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>npx create-next-app@latest project-name --typescript --eslint --tailwind --app --src-dir --import-alias &lt;span style="color:#e6db74">&amp;#34;@/*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Say no to Turbopack.&lt;/p></description></item><item><title>Basic ML</title><link>http://localhost:1313/docs/ml/basic/</link><pubDate>Wed, 08 Jan 2025 10:55:07 -0800</pubDate><guid>http://localhost:1313/docs/ml/basic/</guid><description>&lt;h1 id="basic-ml">
 Basic ML
 &lt;a class="anchor" href="#basic-ml">#&lt;/a>
&lt;/h1>
&lt;p>Below are some snippets for common ML use cases such as NLP &amp;ndash; namely, LLMs &amp;ndash; computer vision, and even standard statistical ML.&lt;/p>
&lt;h2 id="large-language-models-llms">
 Large Language Models (LLMs)
 &lt;a class="anchor" href="#large-language-models-llms">#&lt;/a>
&lt;/h2>
&lt;p>For initial iteration, using LLM APIs is probably the best way to go. There are several models out there, each with their own strengths. Below is an example using the &lt;a href="https://platform.openai.com/docs/quickstart?language-preference=python">OpenAI API&lt;/a> to make a call to a language model:&lt;/p></description></item><item><title>Class Resources</title><link>http://localhost:1313/docs/class-resources/</link><pubDate>Wed, 08 Jan 2025 10:55:07 -0800</pubDate><guid>http://localhost:1313/docs/class-resources/</guid><description>&lt;h1 id="class-resources">
 Class Resources
 &lt;a class="anchor" href="#class-resources">#&lt;/a>
&lt;/h1>
&lt;p>Below are some general class resources, ranging from deployment credits to general tools of the trade.&lt;/p>
&lt;h2 id="vercel-credits">
 Vercel Credits
 &lt;a class="anchor" href="#vercel-credits">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Students can create a Vercel Hobby account as soon as the class starts - Hobby accounts are always free&lt;/li>
&lt;li>If they&amp;rsquo;d like to explore Pro features, we&amp;rsquo;ve set up &amp;ldquo;Stanford CS&amp;rdquo; as a category in the &lt;a href="https://vercel.com/startups/credits">Vercel Credits for Startups&lt;/a> application page. Each team will receive $1,200 in credits. For &amp;ldquo;Proof of Partnership&amp;rdquo;, they should upload a screenshot of the syllabus / an e-mail from Jay about the course.&lt;/li>
&lt;li>A 14-day Pro Trial begins (they can email &lt;a href="mailto:josh.oynick@vercel.com">josh.oynick@vercel.com&lt;/a> with any issues).&lt;/li>
&lt;li>At the end of the trial, if the teams choose to remain on Pro and add credit card info, the credits will begin to draw down.&lt;/li>
&lt;li>If teams add payment info, they are strongly encouraged to set hard spending limits right away &lt;a href="https://vercel.com/docs/pricing/spend-management">(documentation)&lt;/a>.&lt;/li>
&lt;/ul>
&lt;h2 id="tools-of-the-trade">
 Tools of the Trade
 &lt;a class="anchor" href="#tools-of-the-trade">#&lt;/a>
&lt;/h2>
&lt;h3 id="documentation">
 Documentation
 &lt;a class="anchor" href="#documentation">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>Github Wiki&lt;/li>
&lt;li>&lt;a href="https://github.com/cs210/Home/blob/master/Resources/exampleTeamHome.md">Here are some examples&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="project-management">
 Project Management
 &lt;a class="anchor" href="#project-management">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>Github issues, milestones, labels, comments&lt;/li>
&lt;li>&lt;a href="https://github.com/cs210/SlingShot/issues?q=is%3Aissue&amp;#43;is%3Aclosed">Here is an example&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="real-time-team-communication">
 Real-time Team Communication
 &lt;a class="anchor" href="#real-time-team-communication">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>Slack, Messenger&lt;/li>
&lt;/ul>
&lt;h3 id="discovery-concepting-phase">
 Discovery, Concepting Phase
 &lt;a class="anchor" href="#discovery-concepting-phase">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>Hand draw, Miro, Figma, GSlides&lt;/li>
&lt;/ul>
&lt;h3 id="build-phase">
 Build Phase
 &lt;a class="anchor" href="#build-phase">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>Github Code (Pull request methodology)&lt;/li>
&lt;li>Github issues (code focused)&lt;/li>
&lt;li>Leverage Copilot, chatGPT, Bard as is useful&lt;/li>
&lt;/ul>
&lt;h2 id="github-resources">
 GitHub Resources
 &lt;a class="anchor" href="#github-resources">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/cs210/Home/blob/master/Resources/RegisterUserNameInGit.md">Make sure your git activity is attributed to you&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/cs210/Home/blob/master/Resources/GithubCheatSheetPage1.pdf">Github Cheat Sheet - Page 1&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/cs210/Home/blob/master/Resources/GithubCheatSheetPage2.pdf">Github Cheat Sheet - Page 2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://help.github.com/articles/creating-a-pull-request/">How to make a Github pull request&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="miscellany-resources">
 Miscellany Resources
 &lt;a class="anchor" href="#miscellany-resources">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://docs.google.com/spreadsheets/d/1M6M7dHHVzunv3ynmKHIMDKkJat3JVMIUYl3Bs-g9VUw/edit?usp=sharing">Messaging Activation Matrix&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.google.com/document/d/1vu-8u8_Qayhp2ZJwyUKVFi920v-m0gLhYrK8908S5do/edit?usp=sharing">Beginner&amp;rsquo;s resources for Building Web and mobile apps&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/cs210/Home/blob/master/Resources/CS210ReadingList.pdf">CS210 Recommended Reads for Aspiring Program Managers/Product Leaders&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.google.com/document/d/17V02paI0qu3Ib4Hi8N-UNfOv-r2VGFjF5tgbj4e3Lvc/edit?usp=sharing">Contract of Deliverables Template&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.google.com/document/d/1G83CHXpSJJ53WH4mEEiaD7O_BOWMzSAfDg4zL6o-3L4/edit?usp=sharing">Product Requirements Document (PRD)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.google.com/document/d/12levihvt-3oeqtq_nUZLFPP0ipz9w2Whiz5fVkJ57pM/edit?usp=sharing">An incomplete list of ethics questions to consider&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/cs210/Home/blob/master/BudgetGuidelines.md">Team Budget Guidelines&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/cs210/Home/blob/master/Grading%20Rubric%20%20%282%29.pdf">Grading Rubric&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://giphy.com/apps/giphycapture">Make an animated gif from screen shots&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://scrumblr.ca/">Digital sticky note option&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Getting Started in VR</title><link>http://localhost:1313/docs/vr/getting-started-in-vr/</link><pubDate>Wed, 08 Jan 2025 10:55:07 -0800</pubDate><guid>http://localhost:1313/docs/vr/getting-started-in-vr/</guid><description>&lt;h1 id="getting-started-in-vr">
 Getting Started in VR
 &lt;a class="anchor" href="#getting-started-in-vr">#&lt;/a>
&lt;/h1>
&lt;p>Original document by Mindy:&lt;/p>
&lt;p>Last year I did a VR project in CS210 with Unreal Engine, and thought that I would share some thoughts and tips with you guys to get you started.&lt;/p>
&lt;h2 id="demos">
 Demos
 &lt;a class="anchor" href="#demos">#&lt;/a>
&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Title&lt;/th>
 &lt;th>Link&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>&lt;strong>Oculus Demos repository&lt;/strong>&lt;/td>
 &lt;td>&lt;a href="https://share.oculus.com/">https://share.oculus.com/&lt;/a>&lt;/td>
 &lt;td>The definitive VR experiences and demos repository from Oculus.&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>&lt;strong>Elite Dangerous&lt;/strong>&lt;/td>
 &lt;td>&lt;a href="https://www.elitedangerous.com/">https://www.elitedangerous.com/&lt;/a>&lt;/td>
 &lt;td>A space exploration video game with a great VR experience. Costs $45.&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="things-to-think-about">
 Things to think about
 &lt;a class="anchor" href="#things-to-think-about">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>what sort of approaches to games/experiences might work for your project?&lt;/li>
&lt;li>What are some common/different control interfaces/menus/UI that the demos use? What works better or worse?&lt;/li>
&lt;li>what hasn&amp;rsquo;t been done/done well? What can you bring to the table?&lt;/li>
&lt;li>There are also loads of other VR demos available - if you want to see if a kind of demo exists just Google it and you&amp;rsquo;ll probably turn something up.&lt;/li>
&lt;li>Also check out Cardboard demos on Google Play (I recommend VRSE) to see what sort of things are happening in the non-gaming/low-end space.&lt;/li>
&lt;/ul>
&lt;h2 id="vr-best-practices">
 VR best practices
 &lt;a class="anchor" href="#vr-best-practices">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Google - &lt;a href="http://www.fastcodesign.com/3053288/3-tips-on-designing-for-vr-from-google">http://www.fastcodesign.com/3053288/3-tips-on-designing-for-vr-from-google&lt;/a>, &lt;a href="https://play.google.com/store/apps/details?id=com.google.vr.cardboard.apps.designlab">https://play.google.com/store/apps/details?id=com.google.vr.cardboard.apps.designlab&lt;/a>&lt;/li>
&lt;li>Unreal - &lt;a href="https://docs.unrealengine.com/latest/INT/Platforms/VR/ContentSetup/index.html">https://docs.unrealengine.com/latest/INT/Platforms/VR/ContentSetup/index.html&lt;/a>&lt;/li>
&lt;li>Oculus - &lt;a href="https://developer.oculus.com/documentation/intro-vr/latest/concepts/bp_intro/">https://developer.oculus.com/documentation/intro-vr/latest/concepts/bp_intro/&lt;/a>&lt;/li>
&lt;li>Search for &amp;ldquo;VR best practices for [insert company/device/controller]&amp;rdquo; and you&amp;rsquo;ll probably unearth a ton of stuff&lt;/li>
&lt;/ul>
&lt;h2 id="unreal-engine-tutorials">
 Unreal Engine tutorials
 &lt;a class="anchor" href="#unreal-engine-tutorials">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>Unreal has a really good YouTube series where a developer sits there and shows you how to make a demo. This was by far the most helpful way to get me oriented.
&lt;ul>
&lt;li>&lt;a href="https://www.youtube.com/playlist?list=PLZlv_N0_O1gak1_FoAJVrEGiLIploeF3F">https://www.youtube.com/playlist?list=PLZlv_N0_O1gak1_FoAJVrEGiLIploeF3F&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>LayoutVR has good walkthrough guides&lt;/li>
&lt;li>You can go read &lt;a href="https://docs.unrealengine.com/latest/INT/index.html">the official Unreal Engine guides&lt;/a> too&lt;/li>
&lt;li>Unreal has a steep learning curve if you&amp;rsquo;ve never done game dev before, so make sure you allocate a lot of time to learning it!&lt;/li>
&lt;/ul>
&lt;h2 id="controllers">
 Controllers
 &lt;a class="anchor" href="#controllers">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>This is still a huge pain point in VR, and likely the bottleneck to what you can accomplish.&lt;/li>
&lt;li>Oculus Touch is probably your best bet if you can get your hands on it&lt;/li>
&lt;li>Razer Hydra/Sixense STEM or the Kinect are other good&lt;/li>
&lt;li>But really, try to find all your possible options. If the controller is not exactly commercially available yet, don&amp;rsquo;t be afraid to ask for a prototype. You won&amp;rsquo;t believe how willing people are to work with you once you drop the Stanford/Unreal/Facebook/Oculus name.&lt;/li>
&lt;/ul>
&lt;h2 id="mindys-teams-work-from-last-year">
 Mindy&amp;rsquo;s team&amp;rsquo;s work from last year
 &lt;a class="anchor" href="#mindys-teams-work-from-last-year">#&lt;/a>
&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://unrealvr.wordpress.com/">https://unrealvr.wordpress.com/&lt;/a>&lt;/li>
&lt;li>I&amp;rsquo;ve also done stuff on the Cardboard and some product research on the space in general. Feel free to ask me any questions!&lt;/li>
&lt;/ul>
&lt;p>There is a LOT of information to just absorb if you&amp;rsquo;re completely new to the space.&lt;/p></description></item><item><title>Frontend Essentials</title><link>http://localhost:1313/docs/web/frontend-essentials/</link><pubDate>Sat, 25 Jan 2025 10:55:07 -0800</pubDate><guid>http://localhost:1313/docs/web/frontend-essentials/</guid><description>&lt;h1 id="frontend-development-guide-for-nextjs">
 Frontend Development Guide for Next.js
 &lt;a class="anchor" href="#frontend-development-guide-for-nextjs">#&lt;/a>
&lt;/h1>
&lt;h2 id="component-architecture">
 Component Architecture
 &lt;a class="anchor" href="#component-architecture">#&lt;/a>
&lt;/h2>
&lt;h3 id="understanding-components">
 Understanding Components
 &lt;a class="anchor" href="#understanding-components">#&lt;/a>
&lt;/h3>
&lt;p>Components are the building blocks of your React application. They should be:&lt;/p>
&lt;ul>
&lt;li>Small and focused on a single responsibility&lt;/li>
&lt;li>Reusable across different parts of your application&lt;/li>
&lt;li>Easy to test and maintain&lt;/li>
&lt;/ul>
&lt;p>Here&amp;rsquo;s an example of a well-structured component:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-typescript" data-lang="typescript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// components/ui/Card.tsx
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Define the shape of props(parameters) that this component accepts
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">interface&lt;/span> &lt;span style="color:#a6e22e">CardProps&lt;/span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">title&lt;/span>: &lt;span style="color:#66d9ef">string&lt;/span> &lt;span style="color:#75715e">// Required: The card&amp;#39;s title
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">children&lt;/span>: &lt;span style="color:#66d9ef">React.ReactNode&lt;/span> &lt;span style="color:#75715e">// Required: The content inside the card
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#a6e22e">className?&lt;/span>: &lt;span style="color:#66d9ef">string&lt;/span> &lt;span style="color:#75715e">// Optional: Additional CSS classes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">// Card component that renders a styled container with a title and content
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">export&lt;/span> &lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">Card&lt;/span>({ 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">title&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">children&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a6e22e">className&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span> &lt;span style="color:#75715e">// Default to empty string if no className provided
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span>}&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">CardProps&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#66d9ef">return&lt;/span> (
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#75715e">// Main container with base styles and optional custom classes
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">&lt;/span> &amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">className&lt;/span>&lt;span style="color:#f92672">=&lt;/span>{&lt;span style="color:#e6db74">`
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> rounded-lg /* Rounded corners */
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> shadow-md /* Subtle shadow for depth */
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> p-4 /* Padding on all sides */
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> &lt;/span>&lt;span style="color:#e6db74">${&lt;/span>&lt;span style="color:#a6e22e">className&lt;/span>&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> /* Custom classes passed as prop */
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> `&lt;/span>}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#75715e">/* Title section with consistent styling */&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">h2&lt;/span> &lt;span style="color:#a6e22e">className&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;text-xl font-bold mb-2&amp;#34;&lt;/span>&amp;gt;{&lt;span style="color:#a6e22e">title&lt;/span>}&amp;lt;/&lt;span style="color:#f92672">h2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> 
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&lt;span style="color:#75715e">/* Content section that renders the children */&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;&lt;span style="color:#f92672">div&lt;/span>&amp;gt;{&lt;span style="color:#a6e22e">children&lt;/span>}&amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This Card component demonstrates several best practices:&lt;/p></description></item><item><title>Using LLMs</title><link>http://localhost:1313/docs/ml/using-llms/</link><pubDate>Wed, 08 Jan 2025 10:55:07 -0800</pubDate><guid>http://localhost:1313/docs/ml/using-llms/</guid><description>&lt;h1 id="using-llms">
 Using LLMs
 &lt;a class="anchor" href="#using-llms">#&lt;/a>
&lt;/h1>
&lt;p>Below are some ways to go beyond just LLMs and use your custom data. These include methods such as Retrieval Augmented Generation (RAG), finetuning, and even searching over tabular data.&lt;/p>
&lt;h2 id="prompt-engineering">
 Prompt Engineering
 &lt;a class="anchor" href="#prompt-engineering">#&lt;/a>
&lt;/h2>
&lt;p>LLMs are trained on a ton of text, so we can often get a lot out of them just by clever prompting. Finding the best way to prompt a model is also known as &lt;a href="https://lilianweng.github.io/posts/2023-03-15-prompt-engineering/">&lt;strong>prompt engineering&lt;/strong>&lt;/a>, and there are several popular methods, including chain-of-thought (including the model&amp;rsquo;s reasoning step-by-step) as well as few-shot prompting (providing a few sample examples).&lt;/p></description></item><item><title>Databases</title><link>http://localhost:1313/docs/web/databases/</link><pubDate>Sat, 25 Jan 2025 10:55:07 -0800</pubDate><guid>http://localhost:1313/docs/web/databases/</guid><description>&lt;h1 id="databases">
 Databases
 &lt;a class="anchor" href="#databases">#&lt;/a>
&lt;/h1>
&lt;p>Most modern web applications often require a database to store and manage data. This guide will lead you through setting up a database for a Next.js project, using hosted database services, and performing basic CRUD (Create, Read, Update, Delete) operations with Prisma, a popular ORM (Object Relational Mapper).&lt;/p>
&lt;hr>
&lt;h2 id="choosing-a-database">
 Choosing a Database
 &lt;a class="anchor" href="#choosing-a-database">#&lt;/a>
&lt;/h2>
&lt;h3 id="sql-postgresql-via-supabase">
 SQL (PostgreSQL via Supabase)
 &lt;a class="anchor" href="#sql-postgresql-via-supabase">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>Choose when you need: Data relationships, ACID compliance, complex queries&lt;/li>
&lt;li>Free tier available, excellent documentation&lt;/li>
&lt;li>Built-in row-level security and authentication&lt;/li>
&lt;/ul>
&lt;h3 id="nosql-mongodb-atlas">
 NoSQL (MongoDB Atlas)
 &lt;a class="anchor" href="#nosql-mongodb-atlas">#&lt;/a>
&lt;/h3>
&lt;ul>
&lt;li>Choose when you need: Flexible schema, high write throughput, horizontal scaling&lt;/li>
&lt;li>Free tier available, great for prototypes&lt;/li>
&lt;li>Native JSON support&lt;/li>
&lt;/ul>
&lt;h2 id="setup-guide-for-hosted-databases">
 Setup Guide for Hosted Databases
 &lt;a class="anchor" href="#setup-guide-for-hosted-databases">#&lt;/a>
&lt;/h2>
&lt;h3 id="postgresql-via-supabase">
 PostgreSQL via Supabase
 &lt;a class="anchor" href="#postgresql-via-supabase">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>Sign up &lt;a href="https://supabase.com">here&lt;/a>&lt;/li>
&lt;li>Create project&lt;/li>
&lt;li>Get connection string from: Settings -&amp;gt; Database&lt;/li>
&lt;/ol>
&lt;h3 id="mongodb-atlas">
 MongoDB Atlas
 &lt;a class="anchor" href="#mongodb-atlas">#&lt;/a>
&lt;/h3>
&lt;ol>
&lt;li>Sign up &lt;a href="https://mongodb.com/atlas">here&lt;/a>&lt;/li>
&lt;li>Create cluster (M0 Free tier)&lt;/li>
&lt;li>Get connection string from: Connect -&amp;gt; Connect your application&lt;/li>
&lt;/ol>
&lt;hr>
&lt;h2 id="adding-prisma-to-your-nextjs-project">
 Adding Prisma to Your Next.js Project
 &lt;a class="anchor" href="#adding-prisma-to-your-nextjs-project">#&lt;/a>
&lt;/h2>
&lt;p>Prisma makes working with databases in Next.js efficient and type-safe. Follow these steps:&lt;/p></description></item><item><title>A Potpourri of Resources</title><link>http://localhost:1313/docs/ml/potpourri-resources/</link><pubDate>Wed, 08 Jan 2025 10:55:07 -0800</pubDate><guid>http://localhost:1313/docs/ml/potpourri-resources/</guid><description>&lt;h1 id="a-potpourri-of-resources">
 A Potpourri of Resources
 &lt;a class="anchor" href="#a-potpourri-of-resources">#&lt;/a>
&lt;/h1>
&lt;p>Below is a set of resources, ranging from popular AI/ML tooling to general advice.&lt;/p>
&lt;h2 id="general-advice">
 General Advice
 &lt;a class="anchor" href="#general-advice">#&lt;/a>
&lt;/h2>
&lt;p>Below are some general tips, aggregated from industry experts and 210 alums.&lt;/p>
&lt;h3 id="buy-first-then-build">
 Buy first, then Build
 &lt;a class="anchor" href="#buy-first-then-build">#&lt;/a>
&lt;/h3>
&lt;p>For initial functional prototyping and for most of the former part of your application&amp;rsquo;s lifecycle, lean on existing APIs to do a lot of the heavy lifting. These models are already quite powerful and are able to handle almost all of the requests you send it. If certain users or design partners necessitate even more advanced functionality, though, consider working and finetuning your own LLMs.&lt;/p></description></item></channel></rss>