[{"id":0,"href":"/docs/ml/basic/","title":"Basic ML","section":"ML Engineering","content":" Basic ML # Below are some snippets for common ML use cases such as NLP \u0026ndash; namely, LLMs \u0026ndash; computer vision, and even standard statistical ML.\nOur advice? For initial functional prototyping and for most of the former part of your application\u0026rsquo;s lifecycle, lean on existing APIs to do a lot of the heavy lifting. These models are already quite powerful and are able to handle almost all of the requests you send it. If certain users or design partners necessitate even more advanced functionality, though, consider working and finetuning your own LLMs.\nLarge Language Models (LLMs) # [TO-DO: ADD FINETUNING]\nUsing APIs # For initial iteration, using LLM APIs is probably the best way to go. There are several models out there, each with their own strengths. Below is an example using the OpenAI API to make a call to a language model:\nfrom openai import OpenAI client = OpenAI() completion = client.chat.completions.create( model=\u0026#34;gpt-4o-mini\u0026#34;, messages=[ {\u0026#34;role\u0026#34;: \u0026#34;system\u0026#34;, \u0026#34;content\u0026#34;: \u0026#34;You are a helpful assistant.\u0026#34;}, { \u0026#34;role\u0026#34;: \u0026#34;user\u0026#34;, \u0026#34;content\u0026#34;: \u0026#34;Write a haiku about recursion in programming.\u0026#34; } ] ) print(completion.choices[0].message) Custom Open-Source Models # As you continue to iterate, you may want to leverage the power of open-source models. For this, Hugging Face \u0026ndash; in particular, the SentenceTransformers module \u0026ndash; will be your best friend. Just specify your language model and you\u0026rsquo;ll be good to go:\nfrom sentence_transformers import SentenceTransformer model = SentenceTransformer(\u0026#39;paraphrase-MiniLM-L6-v2\u0026#39;) # Sentences we want to encode. Example: sentence = [\u0026#39;This framework generates embeddings for each input sentence\u0026#39;] # Sentences are encoded by calling model.encode() embedding = model.encode(sentence) Of course, utilizing an open-source model will also mean figuring out how to serve the model. There are a plethora of tools for this, including Modal, Baseten, Together AI, and many others.\n"},{"id":1,"href":"/docs/class-resources/","title":"Class Resources","section":"Docs","content":" Class Resources # Below are some general class resources, ranging from deployment credits to general tools of the trade.\nVercel Credits # Students can create a Vercel Hobby account as soon as the class starts - Hobby accounts are always free If they\u0026rsquo;d like to explore Pro features, we\u0026rsquo;ve set up \u0026ldquo;Stanford CS\u0026rdquo; as a category in the Vercel Credits for Startups application page. Each team will receive $1,200 in credits. For \u0026ldquo;Proof of Partnership\u0026rdquo;, they should upload a screenshot of the syllabus / an e-mail from Jay about the course. A 14-day Pro Trial begins (they can email josh.oynick@vercel.com with any issues). At the end of the trial, if the teams choose to remain on Pro and add credit card info, the credits will begin to draw down. If teams add payment info, they are strongly encouraged to set hard spending limits right away (documentation). Tools of the Trade # Documentation # Github Wiki Here are some examples Project Management # Github issues, milestones, labels, comments Here is an example Real-time Team Communication # Slack, Messenger Discovery, Concepting Phase # Hand draw, Miro, Figma, GSlides Build Phase # Github Code (Pull request methodology) Github issues (code focused) Leverage Copilot, chatGPT, Bard as is useful GitHub Resources # Make sure your git activity is attributed to you Github Cheat Sheet - Page 1 Github Cheat Sheet - Page 2 How to make a Github pull request Miscellany Resources # Messaging Activation Matrix Beginner\u0026rsquo;s resources for Building Web and mobile apps CS210 Recommended Reads for Aspiring Program Managers/Product Leaders Contract of Deliverables Template Product Requirements Document (PRD) An incomplete list of ethics questions to consider Team Budget Guidelines Grading Rubric Make an animated gif from screen shots Digital sticky note option "}]